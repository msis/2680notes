{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Collection of notes for 2.680 students \u00b6 \ud83d\udc4b students, The aim of this repo is to answer your most frequent asked questions about C++ , MOOS , MOOS-IvP , etc. Feel free to create issues about subjects your interested in and contribute by forking and creating new pull request s. I'm using Obsidian to organize these notes.","title":"Collection of notes for 2.680 students"},{"location":"#collection-of-notes-for-2680-students","text":"\ud83d\udc4b students, The aim of this repo is to answer your most frequent asked questions about C++ , MOOS , MOOS-IvP , etc. Feel free to create issues about subjects your interested in and contribute by forking and creating new pull request s. I'm using Obsidian to organize these notes.","title":"Collection of notes for 2.680 students"},{"location":"Additional%20resources/","text":"The Missing CS Semester Highly recommended IAP class Talks about Shell , git , vim , etc.","title":"Additional resources"},{"location":"MOOS-IvP/","text":"placeholder","title":"MOOS IvP"},{"location":"MOOS/","text":"MOOS is publish-subscribe middleware . An MOOSApp ( CMOOSApp ) communicates with the #MOOSDB and: publishes messages( CMOOSMsg ), registers for messages. The MOOSDB will manages the incoming messages and send messages to all subscribed apps. MOOS Relationships \u00b6 erDiagram CMOOSApp }o--|| MOOSDB : connects MOOSDB ||--o{ CMOOSMsg : manages CMOOSMsg }o--o{ CMOOSApp: publishes MOOSDB \u00b6 The MOOSDB is more a blackboard than a database. It keeps tracks of the message it receives. Each message is unique by its name, see message class definition . CMOOSApp \u00b6 CMOOSApp Lifecycle \u00b6 stateDiagram-v2 [*] --> OnStartup OnStartup --> OnConnect : after it connects to MOOSDB state fork_state < > OnConnect --> fork_state : Run loop fork_state --> OnNewMail OnNewMail --> OnNewMail note left of OnNewMail : Runs at CommsTick speed fork_state --> Iterate Iterate --> Iterate note right of Iterate : Runs at AppTick speed fork_state --> [*] : quit CMOOSApp Class \u00b6 The following is a non-exhaustive class diagram of CMOOSApp : classDiagram class CMOOSApp{ -string : name +Notify() +Register() } CMOOSMsg \u00b6 CMOOSMsg Class \u00b6","title":"MOOS"},{"location":"MOOS/#moos-relationships","text":"erDiagram CMOOSApp }o--|| MOOSDB : connects MOOSDB ||--o{ CMOOSMsg : manages CMOOSMsg }o--o{ CMOOSApp: publishes","title":"MOOS Relationships"},{"location":"MOOS/#moosdb","text":"The MOOSDB is more a blackboard than a database. It keeps tracks of the message it receives. Each message is unique by its name, see message class definition .","title":"MOOSDB"},{"location":"MOOS/#cmoosapp","text":"","title":"CMOOSApp"},{"location":"MOOS/#cmoosapp-lifecycle","text":"stateDiagram-v2 [*] --> OnStartup OnStartup --> OnConnect : after it connects to MOOSDB state fork_state < > OnConnect --> fork_state : Run loop fork_state --> OnNewMail OnNewMail --> OnNewMail note left of OnNewMail : Runs at CommsTick speed fork_state --> Iterate Iterate --> Iterate note right of Iterate : Runs at AppTick speed fork_state --> [*] : quit","title":"CMOOSApp Lifecycle"},{"location":"MOOS/#cmoosapp-class","text":"The following is a non-exhaustive class diagram of CMOOSApp : classDiagram class CMOOSApp{ -string : name +Notify() +Register() }","title":"CMOOSApp Class"},{"location":"MOOS/#cmoosmsg","text":"","title":"CMOOSMsg"},{"location":"MOOS/#cmoosmsg-class","text":"","title":"CMOOSMsg Class"},{"location":"C%2B%2B/C%2B%2B%20Compiler/","text":"GNU C++ Compiler \u00b6 g++ LLVM Compiler \u00b6 clang","title":"C++ Compiler"},{"location":"C%2B%2B/C%2B%2B%20Compiler/#gnu-c-compiler","text":"g++","title":"GNU C++ Compiler"},{"location":"C%2B%2B/C%2B%2B%20Compiler/#llvm-compiler","text":"clang","title":"LLVM Compiler"},{"location":"C%2B%2B/C%2B%2B/","text":"Variables \u00b6 1 double d = 0.0 ; C++ Project \u00b6 [[CMake]] is used to organize this C++ project. It will take care of creating a [[Makefile]] and calling the C++ Compiler and [[C++ Linker]] to create the binaries and libraries written.","title":"C++"},{"location":"C%2B%2B/C%2B%2B/#variables","text":"1 double d = 0.0 ;","title":"Variables"},{"location":"C%2B%2B/C%2B%2B/#c-project","text":"[[CMake]] is used to organize this C++ project. It will take care of creating a [[Makefile]] and calling the C++ Compiler and [[C++ Linker]] to create the binaries and libraries written.","title":"C++ Project"},{"location":"PavLab/00%20-%20pablo%20git/","text":"Configure PABLO's GitLab access \u00b6 After creating an ssh key on your PABLO, add it to you user profile: User=> Preferences=> SSH Keys . Once your teammate adds you as a Developper to their repo, you should be able to clone, pull, and push to it.","title":"Configure PABLO's GitLab access"},{"location":"PavLab/00%20-%20pablo%20git/#configure-pablos-gitlab-access","text":"After creating an ssh key on your PABLO, add it to you user profile: User=> Preferences=> SSH Keys . Once your teammate adds you as a Developper to their repo, you should be able to clone, pull, and push to it.","title":"Configure PABLO's GitLab access"},{"location":"Utilities/Shell/","text":"","title":"Shell"},{"location":"Utilities/ssh/","text":"","title":"Ssh"},{"location":"Utilities/git/git/","text":"git can simply be considered a distrubuted version control system. It basically keeps track of files on your computer but potentially remote servers as well (like gitlab,github,etc.). How it works \u00b6 flowchart TB add(Live) -- git add --> stage(Staged) stage -- git commit --> commit(Committed) stage -- git restore --staged --> add commit -- git reset --soft --> stage commit -- git push --> push(Pushed) Adding changes ( man page ) \u00b6 1 git add file_name dir_name Committing ( man page ) \u00b6 1 git commit -m \"commit message\" Be verbose about what changes happened since your last commit. Your future self will thank you. Pushing changes to remote ( man page ) \u00b6 1 git push remote_name branch_name remote_name is origin by default. To simply call git push , set up the default remote once by running git push -u remote_name branch_name Remove a file from staging ( man page ) \u00b6 1 git restore --staged file_name Restore file to last committed version (undo current modifications) ( man page ) \u00b6 1 git restore file_name Undo a commit \u26a0\ufe0f ( man page ) \u00b6 1 git reset --soft HEAD^ This will undo the last commit and put the changes back in staging. Be careful with this command. If you pushed the commit to the remote already, you will have to force a push as commit hashes will be different. Must know commands \u00b6 Status of changes ( man page ) \u00b6 1 git status Use this all the time to know what changed in your tree. Show previous commits ( man page ) \u00b6 1 git log git log --oneline --decorate --graph to get a nice readable log Switch braches ( man page ) \u00b6 1 git branch dev git branch -b new_branch will create new_branch and switch to it. Example Scenario \u00b6 1 2 3 4 5 6 7 8 9 edit file_name git status mkdir awesome_dir edit awesome_dir/awesome_idea git status git add file_name awesome_dir git status git commit -m \"adds awesome idea and edits file_name\" git push More on git \u00b6 Official website Branching strategies: Gitlab Flow Github Flow Microsoft Branching Guidance Git Flow Comparison of Strategies A Note About Git Commit Message","title":"Git"},{"location":"Utilities/git/git/#how-it-works","text":"flowchart TB add(Live) -- git add --> stage(Staged) stage -- git commit --> commit(Committed) stage -- git restore --staged --> add commit -- git reset --soft --> stage commit -- git push --> push(Pushed)","title":"How it works"},{"location":"Utilities/git/git/#adding-changes-man-page","text":"1 git add file_name dir_name","title":"Adding changes (man page)"},{"location":"Utilities/git/git/#committing-man-page","text":"1 git commit -m \"commit message\" Be verbose about what changes happened since your last commit. Your future self will thank you.","title":"Committing (man page)"},{"location":"Utilities/git/git/#pushing-changes-to-remote-man-page","text":"1 git push remote_name branch_name remote_name is origin by default. To simply call git push , set up the default remote once by running git push -u remote_name branch_name","title":"Pushing changes to remote (man page)"},{"location":"Utilities/git/git/#remove-a-file-from-staging-man-page","text":"1 git restore --staged file_name","title":"Remove a file from staging (man page)"},{"location":"Utilities/git/git/#restore-file-to-last-committed-version-undo-current-modifications-man-page","text":"1 git restore file_name","title":"Restore file to last committed version (undo current modifications) (man page)"},{"location":"Utilities/git/git/#undo-a-commit-man-page","text":"1 git reset --soft HEAD^ This will undo the last commit and put the changes back in staging. Be careful with this command. If you pushed the commit to the remote already, you will have to force a push as commit hashes will be different.","title":"Undo a commit \u26a0\ufe0f (man page)"},{"location":"Utilities/git/git/#must-know-commands","text":"","title":"Must know commands"},{"location":"Utilities/git/git/#status-of-changes-man-page","text":"1 git status Use this all the time to know what changed in your tree.","title":"Status of changes (man page)"},{"location":"Utilities/git/git/#show-previous-commits-man-page","text":"1 git log git log --oneline --decorate --graph to get a nice readable log","title":"Show previous commits (man page)"},{"location":"Utilities/git/git/#switch-braches-man-page","text":"1 git branch dev git branch -b new_branch will create new_branch and switch to it.","title":"Switch braches (man page)"},{"location":"Utilities/git/git/#example-scenario","text":"1 2 3 4 5 6 7 8 9 edit file_name git status mkdir awesome_dir edit awesome_dir/awesome_idea git status git add file_name awesome_dir git status git commit -m \"adds awesome idea and edits file_name\" git push","title":"Example Scenario"},{"location":"Utilities/git/git/#more-on-git","text":"Official website Branching strategies: Gitlab Flow Github Flow Microsoft Branching Guidance Git Flow Comparison of Strategies A Note About Git Commit Message","title":"More on git"},{"location":"Utilities/git/pull%20request/","text":"github pull requests","title":"Pull request"},{"location":"editors/emacs/","text":"Wikipedia page General \u00b6 Save file: Ctrl + X then Ctrl + S Exit: Ctrl + X then Ctrl + C Editing \u00b6 Undo/redo: Ctrl + _ Delete character (fwd): Ctrl + D Delete character (bwd) : Del Delete word (fwd): Meta + D Delete word (bwd): Meta + Del Delete line (fwd): Ctrl + K Delete line (bwd): Ctrl + Space then Ctrl + A then Ctrl + W Delete sentence (fwd): Meta + K Delete sentence (bwd): Ctrl + X then Del Delete expression (fwd): Ctrl + Meta + K Delete expression (bwd): Ctrl + Meta + Del Searching \u00b6 Fwd search: Ctrl + S Bwd search: Ctrl + R Cutting & Pasting \u00b6 Set mark: Ctrl + Space Cut selected: Ctrl + W Copy selected: Meta + W Paste (yank): Ctrl + Y More on emacs \u00b6 EmacsCheatSheet Spaces v. Tabs, Emacs v. Vim (Silicon Valley S3E6 clip)","title":"Emacs"},{"location":"editors/emacs/#general","text":"Save file: Ctrl + X then Ctrl + S Exit: Ctrl + X then Ctrl + C","title":"General"},{"location":"editors/emacs/#editing","text":"Undo/redo: Ctrl + _ Delete character (fwd): Ctrl + D Delete character (bwd) : Del Delete word (fwd): Meta + D Delete word (bwd): Meta + Del Delete line (fwd): Ctrl + K Delete line (bwd): Ctrl + Space then Ctrl + A then Ctrl + W Delete sentence (fwd): Meta + K Delete sentence (bwd): Ctrl + X then Del Delete expression (fwd): Ctrl + Meta + K Delete expression (bwd): Ctrl + Meta + Del","title":"Editing"},{"location":"editors/emacs/#searching","text":"Fwd search: Ctrl + S Bwd search: Ctrl + R","title":"Searching"},{"location":"editors/emacs/#cutting-pasting","text":"Set mark: Ctrl + Space Cut selected: Ctrl + W Copy selected: Meta + W Paste (yank): Ctrl + Y","title":"Cutting &amp; Pasting"},{"location":"editors/emacs/#more-on-emacs","text":"EmacsCheatSheet Spaces v. Tabs, Emacs v. Vim (Silicon Valley S3E6 clip)","title":"More on emacs"},{"location":"editors/vim/","text":"","title":"Vim"},{"location":"editors/vscode/00%20-%20Intro/","text":"Introduction \u00b6 VSCode is a text-editor from Microsoft. It has very little to do with Visual Studio but the name. Note Saad is very biased here as this is the editor he uses everyday.","title":"Introduction"},{"location":"editors/vscode/00%20-%20Intro/#introduction","text":"VSCode is a text-editor from Microsoft. It has very little to do with Visual Studio but the name. Note Saad is very biased here as this is the editor he uses everyday.","title":"Introduction"},{"location":"editors/vscode/10%20-%20Setting%20things%20up/","text":"Setting things up \u00b6 Install vscode \u00b6 It can be installed either from the official webpage or with Homebrew: 1 brew instal visual-studio-code Install recommended extensions \u00b6 Keyboard shortcut Open the extension menu: Shift + Meta + E ms-vscode.cpptools-extension-pack ms-vsliveshare.vsliveshare-pack Setup bash as default shell for vscode \u00b6 Open the Command Palette and type: default profile . This should only keep one command like Terminal: Select Default Profile . Select bash as the default shell. Keyboard shortcut Command Paletter: Shift + Meta + P Install code for your shell \u00b6 In the Command Palette type: install code . This should only keep one command like Shell Command: Install 'code' in shell PATH Install MOOS Syntax highlighting \u00b6 Download this file moos-ivp-editor-0.2.0.vsix In the directory where you downladed the file above, call this command in a terminal: 1 code --install-extension moos-ivp-editor-0.2.0.vsix","title":"Setting things up"},{"location":"editors/vscode/10%20-%20Setting%20things%20up/#setting-things-up","text":"","title":"Setting things up"},{"location":"editors/vscode/10%20-%20Setting%20things%20up/#install-vscode","text":"It can be installed either from the official webpage or with Homebrew: 1 brew instal visual-studio-code","title":"Install vscode"},{"location":"editors/vscode/10%20-%20Setting%20things%20up/#install-recommended-extensions","text":"Keyboard shortcut Open the extension menu: Shift + Meta + E ms-vscode.cpptools-extension-pack ms-vsliveshare.vsliveshare-pack","title":"Install recommended extensions"},{"location":"editors/vscode/10%20-%20Setting%20things%20up/#setup-bash-as-default-shell-for-vscode","text":"Open the Command Palette and type: default profile . This should only keep one command like Terminal: Select Default Profile . Select bash as the default shell. Keyboard shortcut Command Paletter: Shift + Meta + P","title":"Setup bash as default shell for vscode"},{"location":"editors/vscode/10%20-%20Setting%20things%20up/#install-code-for-your-shell","text":"In the Command Palette type: install code . This should only keep one command like Shell Command: Install 'code' in shell PATH","title":"Install code  for your shell"},{"location":"editors/vscode/10%20-%20Setting%20things%20up/#install-moos-syntax-highlighting","text":"Download this file moos-ivp-editor-0.2.0.vsix In the directory where you downladed the file above, call this command in a terminal: 1 code --install-extension moos-ivp-editor-0.2.0.vsix","title":"Install MOOS Syntax highlighting"},{"location":"editors/vscode/20%20-%20Setting%20MOOS-IvP%20Project/","text":"Setting your MOOS-IvP Project in vscode \u00b6 Warning Make sure you have completed the setup steps 10 - Setting things up#Install recommended extensions , 10 - Setting things up#Install code for your shell . In a terminal, open your project in vscode : 1 code moos-ivp-username On the bottom right corner, the [[CMake]] extension will ask if you would like to configure the project. Choose YES . It will ask you to choose a C++ Compiler . Choose the one the makes sense to you. Note If you weren't prompted to configure the project, you can click on the triangle inside a window icon on the left sidebar. Open the Command Palette and call CMake: Configure . This command will setup the auto-complete and other goodies.","title":"Setting your MOOS-IvP Project in `vscode`"},{"location":"editors/vscode/20%20-%20Setting%20MOOS-IvP%20Project/#setting-your-moos-ivp-project-in-vscode","text":"Warning Make sure you have completed the setup steps 10 - Setting things up#Install recommended extensions , 10 - Setting things up#Install code for your shell . In a terminal, open your project in vscode : 1 code moos-ivp-username On the bottom right corner, the [[CMake]] extension will ask if you would like to configure the project. Choose YES . It will ask you to choose a C++ Compiler . Choose the one the makes sense to you. Note If you weren't prompted to configure the project, you can click on the triangle inside a window icon on the left sidebar. Open the Command Palette and call CMake: Configure . This command will setup the auto-complete and other goodies.","title":"Setting your MOOS-IvP Project in vscode"},{"location":"editors/vscode/21%20-%20Setting%20debugger/","text":"Setting debugger in vscode \u00b6 Danger WORK IN PROGRESS Lazy way \u00b6 Create a file in this path: moos-ivp-username/.vscode/launch.json 1 # TODO","title":"Setting debugger in `vscode`"},{"location":"editors/vscode/21%20-%20Setting%20debugger/#setting-debugger-in-vscode","text":"Danger WORK IN PROGRESS","title":"Setting debugger in vscode"},{"location":"editors/vscode/21%20-%20Setting%20debugger/#lazy-way","text":"Create a file in this path: moos-ivp-username/.vscode/launch.json 1 # TODO","title":"Lazy way"},{"location":"editors/vscode/30%20-%20Building%20MOOS-IvP%20Project/","text":"Building MOOS-IvP Project \u00b6 Warning Make sure you followed all the setups in 20 - Setting MOOS-IvP Project . In the Command Palette , call CMake: Build . A pane on the bottom should show the results of the build. If you see exit 0 , then your build is successful. If not you will have to go to your code and fix the errors.","title":"Building MOOS-IvP Project"},{"location":"editors/vscode/30%20-%20Building%20MOOS-IvP%20Project/#building-moos-ivp-project","text":"Warning Make sure you followed all the setups in 20 - Setting MOOS-IvP Project . In the Command Palette , call CMake: Build . A pane on the bottom should show the results of the build. If you see exit 0 , then your build is successful. If not you will have to go to your code and fix the errors.","title":"Building MOOS-IvP Project"},{"location":"editors/vscode/50%20-%20PABLO/","text":"Working on PABLO boxes from vscode \u00b6 The Remote SSH plugin can be used to access the PABLO boxes from vscode through ssh . Once installed, an icon \"Remote Explorer\" will show up on the sidebar. From there, add a new SSH Target . Provide the ssh command you used to access the box from the terminal ( ssh -l student2680@192.168.4.24 for example). A tree of the remote home directory will show up and you can which folder you want to work on. Note You can use the terminal inside vscode from now on.","title":"Working on PABLO boxes from `vscode`"},{"location":"editors/vscode/50%20-%20PABLO/#working-on-pablo-boxes-from-vscode","text":"The Remote SSH plugin can be used to access the PABLO boxes from vscode through ssh . Once installed, an icon \"Remote Explorer\" will show up on the sidebar. From there, add a new SSH Target . Provide the ssh command you used to access the box from the terminal ( ssh -l student2680@192.168.4.24 for example). A tree of the remote home directory will show up and you can which folder you want to work on. Note You can use the terminal inside vscode from now on.","title":"Working on PABLO boxes from vscode"},{"location":"editors/vscode/99%20-%20Tips/","text":"Tips \u00b6 Shortcuts \u00b6 Open a terminal in vscode : Ctrl + ` Misc \u00b6","title":"Tips"},{"location":"editors/vscode/99%20-%20Tips/#tips","text":"","title":"Tips"},{"location":"editors/vscode/99%20-%20Tips/#shortcuts","text":"Open a terminal in vscode : Ctrl + `","title":"Shortcuts"},{"location":"editors/vscode/99%20-%20Tips/#misc","text":"","title":"Misc"}]}